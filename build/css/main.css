@font-face {
  font-family: "RobotoCondensed-Bold";
  src: url(../fonts/RobotoCondensed-Bold.woff);
}
@font-face {
  font-family: "RobotoCondensed-Medium";
  src: url(../fonts/RobotoCondensed-Medium.woff);
}
@font-face {
  font-family: "RobotoCondensed-Regular";
  src: url(../fonts/RobotoCondensed-Regular.woff);
}
html {
  height: 100%;
}

body {
  margin: 0;
  height: 100%;
}

a {
  text-decoration: none;
}

ul {
  list-style: none;
}

ul, li, p, h1, h2, h3 {
  padding: 0;
  margin: 0;
}

* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

body {
  -ms-scroll-chaining: none;
  overscroll-behavior: none;
  -webkit-tap-highlight-color: transparent;
  background: #F8FAFF;
}
body img {
  max-width: 100%;
  height: auto;
}

.dark .news-page {
  background: #060D1B;
}
.dark .news-page .h1 {
  color: #ffffff;
}
.dark .news-page .h1::after {
  background: rgba(255, 255, 255, 0.14);
}
.dark .news-page .filter {
  color: #ffffff;
}
.dark .news-page .filter__item {
  background-color: #151F36;
  color: #ffffff;
}
.dark .news-page .content .topNews__right {
  background-color: #0D1425;
}
.dark .news-page .content .topNews__right .h2,
.dark .news-page .content .topNews__right .newsInfo {
  color: #ffffff;
}
.dark .news-page .content .news__item-txt {
  background-color: #0D1425;
}
.dark .news-page .content .news__item-txt .h3 {
  color: #ffffff;
}
.dark .news-page .newsDate {
  color: #ffffff;
}

.newsItem {
  position: relative;
  width: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -ms-scroll-chaining: none;
  overscroll-behavior: none;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  background: #F8FAFF;
  overflow: hidden;
}
.newsItem .main {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
  width: 826px;
  position: relative;
  margin-top: 20px;
  margin-bottom: 48px;
}
.newsItem .title {
  width: 100%;
  margin-bottom: 30px;
  position: relative;
}
.newsItem .title::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: -10px;
  width: 100%;
  background: rgba(0, 0, 0, 0.14);
  height: 2px;
  display: block;
}
.newsItem .breadcrumbs {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.newsItem .breadcrumbs-item {
  font-family: RobotoCondensed-Regular, sans-serif;
  font-size: 14px;
  color: #8080AA;
  margin-right: 24px;
  position: relative;
  -webkit-transition: 0.2s ease;
  -o-transition: 0.2s ease;
  transition: 0.2s ease;
}
.newsItem .breadcrumbs-item:hover {
  color: #FF267E;
}
.newsItem .breadcrumbs-item:first-child {
  background: url("../img/logo.png") no-repeat 50% 50%/cover;
  width: 16px;
  height: 16px;
}
.newsItem .breadcrumbs-item::after {
  content: url("../img/arrow.svg");
  position: absolute;
  left: calc(100% + 8px);
  bottom: 9px;
  width: 8px;
  height: 8px;
  display: block;
}
.newsItem .breadcrumbs-item:last-child {
  word-wrap: break-word;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  line-clamp: 1;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
  overflow: hidden;
  margin-right: 0;
}
.newsItem .details {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.newsItem .details .date {
  font-family: RobotoCondensed-Regular, sans-serif;
  font-size: 12px;
  color: #337;
}
.newsItem .details .links {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
.newsItem .details .links__txt {
  font-family: RobotoCondensed-Medium, sans-serif;
  font-size: 14px;
  color: #337;
  margin-right: 8px;
}
.newsItem .details .links__item {
  background-color: #EBEEF4;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 10.5px 16px 11px;
  white-space: nowrap;
  border-radius: 4px;
  position: relative;
  -webkit-transition: 0.2s ease;
  -o-transition: 0.2s ease;
  transition: 0.2s ease;
}
.newsItem .details .links__item:not(:last-child) {
  margin-right: 8px;
}
.newsItem .details .links__item:hover {
  background-color: #FF267E;
}
.newsItem .details .links__item:hover .links__item-txt {
  color: #ffffff;
}
.newsItem .details .links__item:hover path {
  fill: #ffffff;
}
.newsItem .details .links__item-link {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  cursor: pointer;
}
.newsItem .details .links__item-logo {
  width: 16px;
  height: 16px;
  margin-right: 8px;
}
.newsItem .details .links__item-txt {
  font-family: RobotoCondensed-Medium, sans-serif;
  font-size: 14px;
  color: #005;
}
.newsItem .h1 {
  font-family: RobotoCondensed-Bold, sans-serif;
  font-weight: normal;
  text-transform: uppercase;
  color: #005;
  text-align: left;
  font-size: 40px;
  max-width: 716px;
  margin: 8px 0;
}
.newsItem .news {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.newsItem .news__topImg {
  width: 100%;
  height: auto;
  border-radius: 8px;
  margin-bottom: 10px;
  overflow: hidden;
}
.newsItem .news__content {
  width: 615px;
}
.newsItem .news__content .h2,
.newsItem .news__content .h3,
.newsItem .news__content .h4 {
  font-family: RobotoCondensed-Bold, sans-serif;
  font-weight: normal;
  text-transform: uppercase;
  color: #005;
  text-align: left;
  margin-bottom: -8px;
}
.newsItem .news__content .h2 {
  font-size: 32px;
  margin-top: 16px;
}
.newsItem .news__content .h3 {
  font-size: 24px;
  margin-top: 32px;
}
.newsItem .news__content .h4 {
  font-size: 18px;
  margin-top: 32px;
}
.newsItem .news__content .text {
  font-family: RobotoCondensed-Regular, sans-serif;
  font-size: 16px;
  line-height: 26px;
  color: #005;
  -ms-flex-item-align: stretch;
  align-self: stretch;
  margin: 14px 0;
}
.newsItem .news__content .img {
  width: 100%;
  height: auto;
  margin: 16px 0 16px;
  overflow: hidden;
}
.newsItem .news__content .quotation {
  -webkit-margin-before: 0;
  margin-block-start: 0;
  -webkit-margin-after: 0;
  margin-block-end: 0;
  -webkit-margin-start: 0;
  margin-inline-start: 0;
  -webkit-margin-end: 0;
  margin-inline-end: 0;
  width: 100%;
  padding: 48px 53px;
  border-radius: 8px;
  margin: 24px 0 17px;
  background-color: #EBEEF4;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
.newsItem .news__content .quotation-img {
  width: 29px;
  height: 13px;
  margin-bottom: 24px;
}
.newsItem .news__content .quotation-txt {
  font-family: RobotoCondensed-Medium, sans-serif;
  font-size: 24px;
  line-height: 34px;
  color: #005;
  text-align: center;
}
.newsItem .news__content .unorderedList {
  margin-bottom: 20px;
}
.newsItem .news__content .unorderedList-item {
  list-style-type: none;
  position: relative;
  margin-left: 24px;
  font-family: RobotoCondensed-Regular, sans-serif;
  font-size: 16px;
  line-height: 26px;
  color: #005;
  margin-bottom: 8px;
}
.newsItem .news__content .unorderedList-item::before {
  position: absolute;
  top: 13px;
  left: -24px;
  content: "";
  width: 13px;
  height: 1px;
  background-color: #FF267E;
}
.newsItem .news__content .orderedList {
  -webkit-padding-start: 0;
  padding-inline-start: 0;
  list-style-position: outside;
  padding-left: 10px;
  margin-left: 6px;
}
.newsItem .news__content .orderedList-item {
  padding-left: 10px;
  font-family: RobotoCondensed-Regular, sans-serif;
  font-size: 16px;
  line-height: 26px;
  color: #005;
  margin-bottom: 8px;
}
.newsItem .news__content .orderedList-item::marker {
  font-family: RobotoCondensed-Bold, sans-serif;
}
.newsItem .news__content .link {
  font-family: RobotoCondensed-Regular, sans-serif;
  color: #FF267E;
  font-size: 16px;
  line-height: 26.4px;
  -webkit-text-decoration-line: underline;
  text-decoration-line: underline;
  -webkit-text-decoration-style: solid;
  text-decoration-style: solid;
  -webkit-text-decoration-skip-ink: none;
  text-decoration-skip-ink: none;
  text-decoration-thickness: auto;
  text-underline-offset: auto;
  text-underline-position: from-font;
  -webkit-transition: 0.2s ease;
  -o-transition: 0.2s ease;
  transition: 0.2s ease;
}
.newsItem .news__content .link:hover {
  -webkit-text-decoration-line: none;
  text-decoration-line: none;
}
.newsItem .backLink {
  margin-top: 20px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  background-color: #EBEEF4;
  padding: 10px 16px;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-transition: 0.2s ease;
  -o-transition: 0.2s ease;
  transition: 0.2s ease;
  border-radius: 4px;
}
.newsItem .backLink:hover {
  background-color: #FF267E;
}
.newsItem .backLink:hover .backLink__img path {
  fill: #ffffff;
}
.newsItem .backLink:hover .backLink__txt {
  color: #ffffff;
}
.newsItem .backLink__img {
  margin-right: 8px;
  width: 6px;
  height: 16px;
}
.newsItem .backLink__txt {
  font-family: RobotoCondensed-Bold, sans-serif;
  font-size: 14px;
  color: #005;
  text-transform: uppercase;
}

@media screen and (max-width: 875px) {
  .newsItem .main {
    width: 91%;
    margin: 20px auto 48px;
  }
  .newsItem .news__content {
    width: 100%;
  }
}
@media screen and (max-width: 635px) {
  .newsItem .details .links__item-logo {
    margin-right: 0;
  }
  .newsItem .details .links__item-txt {
    display: none;
  }
}
@media screen and (max-width: 500px) {
  .newsItem .main {
    margin-top: 12px;
  }
  .newsItem .breadcrumbs-item {
    font-size: 12px;
    margin-right: 16px;
  }
  .newsItem .breadcrumbs-item:first-child {
    width: 12px;
    height: 12px;
    min-width: 12px;
  }
  .newsItem .breadcrumbs-item:first-child::after {
    bottom: 5.5px;
  }
  .newsItem .breadcrumbs-item::after {
    left: calc(100% + 2px);
    bottom: 6.5px;
  }
  .newsItem .title::after {
    height: 1px;
  }
  .newsItem .details .links__txt {
    font-size: 12px;
  }
  .newsItem .details .links__item {
    padding: 7px 16px;
    border-radius: 4px;
  }
  .newsItem .h1 {
    font-size: 24px;
  }
  .newsItem .news__topImg {
    margin-bottom: 0;
    border-radius: 4px;
  }
  .newsItem .news__content .quotation {
    padding: 24px 26px;
  }
  .newsItem .backLink {
    width: 100%;
    margin-top: 14px;
  }
}
@media screen and (max-width: 335px) {
  .newsItem .details .date {
    font-size: 11px;
  }
  .newsItem .details .links__txt {
    font-size: 11px;
  }
  .newsItem .details .links__item {
    padding: 7px 10px;
  }
  .newsItem .news__content .quotation-img {
    margin-bottom: 17px;
  }
  .newsItem .news__content .quotation-txt {
    font-size: 20px;
    line-height: 30px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
